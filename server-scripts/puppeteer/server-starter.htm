<!DOCTYPE html>
<title>VirtualTabletop.io</title>
<link rel="icon" href="https://raw.githubusercontent.com/ArnoldSmith86/virtualtabletop/main/assets/branding/favicon.svg">
<link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
<style>
    body {
        background-color: #484848;
        font-family: 'Roboto', sans-serif;
    }

    #logo {
        position: fixed;
        width: 100vw;
        height: 20vh;
        top: 10vh;
        left: 0;
        background: #1f5ca6 url(https://raw.githubusercontent.com/ArnoldSmith86/virtualtabletop/main/assets/branding/logo.svg) no-repeat center/contain;
        border: min(5vw, 5vh) #1f5ca6 solid;
        box-sizing: border-box;
    }

    #content {
        position: fixed;
        width: 100vw;
        height: 60vh;
        top: 30vh;
        left: 0;
        padding: 10vh 30vw;
        box-sizing: border-box;
        background: #f0f0f0;
    }
</style>

<div id="logo"></div>
<div id="content">
    <h1>Server Starter</h1>
    <p>The VirtualTabletop.io server you are trying to access is currently not running. Please wait while it is being started...</p>
    <p id="state"></p>
</div>

<script>
    const url = window.location.href;
    fetch('/puppeteer/start', {
        method: 'POST',
        body: JSON.stringify({ url }),
        headers: { 'Content-Type': 'application/json' }
    });

    let lastState = '';
    const i = setInterval(() => {
        fetch('/puppeteer/state', {
            method: 'POST',
            body: JSON.stringify({ url }),
            headers: { 'Content-Type': 'application/json' }
        }).then(r => r.json()).then(data => {
            if (data.redirect) {
                const urlSuffix = window.location.href.split('/').pop();
                if(urlSuffix.match(/^PR-\d+$/)) {
                    window.location.href = data.redirect;
                } else {
                    window.location.href = data.redirect + '/' + urlSuffix;
                }
                document.getElementById('state').innerHTML += new Date().toLocaleTimeString() + ' - redirecting to old URL<br>';
                clearInterval(i);
            } else if (data.state === 'running') {
                location.reload();
            } else if(data.state != lastState) {
                document.getElementById('state').innerHTML += new Date().toLocaleTimeString() + ' - ' + data.state + '<br>';
                lastState = data.state;
            }
        });
    }, 1000);
    document.getElementById('state').innerHTML += new Date().toLocaleTimeString() + ' - 0/4 initializing<br>';
</script>